{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-01T16:02:06.872Z",
    "end": "2021-11-01T16:02:18.396Z",
    "duration": 11524,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4a47d26e-e4b1-457f-8229-103c7aff011a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1372e3eb-66c6-4ad4-804f-73e6ae2da108",
          "title": "\"Email\" warning testing",
          "fullFile": "/Users/bystrovoleg/Desktop/revoAutomation1/src/test/authWarnTest.js",
          "file": "/test/authWarnTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "'Required' warning",
              "fullTitle": "\"Email\" warning testing 'Required' warning",
              "timedOut": false,
              "duration": 11515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let chrome = require('selenium-webdriver/chrome');\nlet browser = new Builder().forBrowser('chrome').setChromeOptions(new chrome.Options().addArguments('--headless')).build();\n//let browser = new Builder().forBrowser('chrome').usingServer('http://localhost:4444/wd/hub')\nawait browser.get('https://dev.revolab.lt/login');\nawait delay(3000);\nawait browser.findElement(By.xpath('//button[@class=\"App_cookieConsentButton__2FHWO\"]')).click();\nawait browser.findElement(By.xpath('//div[@class=\"CustomInput_wrapper__2psis\"]/input')).sendKeys(Key.ENTER);\nlet warnText = await browser.findElement(By.xpath('//div[@class=\"CustomInput_wrapper__2psis\"]/div')).getText().then(function(value) {\n    return value;\n});\nawait assert.strictEqual(warnText, 'Privaloma');\n    \nawait browser.quit();",
              "err": {},
              "uuid": "9c2c9839-fc41-4a30-86a7-e3125f415767",
              "parentUUID": "1372e3eb-66c6-4ad4-804f-73e6ae2da108",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c2c9839-fc41-4a30-86a7-e3125f415767"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11515,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}